Контрольные вопросы часть 1. Базовый синтаксис.

1. Что такое виртуальная машина?

Виртуальная машина - программа, которая запускает и выполняет java-программу на любом устройстве и ОС,
а также для управления и оптимизации памяти программы. Принцип JVM такой: «Написал один раз, запускай везде».
JVM интерпретирует байт-код (из файла *.class) в машинный код в зависимости от типа ОС и архитектуры процессора и запускает его, результат выполнения которого мы видим на своем устройстве/компьютере.

2. К какому типу языка программирования относится Java?

Язык Java это интерпретируемый язык. 
Написанный код -> компилируется в байт-код, который выполняется через интерпретатор Виртуальная машины.

3. Из каких компонентов состоит Java (JDK, JRE, JVM)?

4. Для чего используется JDK?

JDK (Java Development Kit) - комплект ПО необходимого для разработки и запуска java-приложений. 
Включает в себя компилятор (javac), JRE (Java runtime environment) - виртуальная машина и стандартного набора библиотек java.

5. Для чего используется JRE?

JRE (Java untime environment) - среда выполнения java-приложений, необходима для запуска java-приложений на любой платформе и любой ОС.
Включает в себя виртуальную машину(VM) и набор стандартных библиотек.

6. Для чего используется VM?

VM (Virtual Machine) - виртуальная машина запускает и выполняет Java-приложения на машине/платформе пользователя.

7. Расскажите про примитивные типы.

В java выделяют 8 примитивных типов, они разделяются по категориям: 

1) логические: boolean, 
2) символьные: char, 
3) дробные: float, double,
4) целочисленные byte (8 бит), short (16 бит), int (32 бит), long (64 бит).


В Java есть два типа это примитивные и ссылочные.
Ссылочные типы - это типы которые указывают на что-либо(на объект). 
Т.е. они содержат адрес в памяти где лежит объект на который ссылаемся

8. Опишите шаги для компиляции и запуска приложения в консоли (javac java).
8.1) создается java-программа и записываем ее в файл file.java
8.2) Вызываем консоль и вводим команду для компиляции: javac file.java
8.3) В результате компиляции получаем байт-код с именем: file.class
8.4) Пишем в консоли: java file в результате чего байт-код проходит через виртуальную машину и мы видим результат выполнения программы

8. Опишите механизм создания байт кода.
8.1) Создаем класс - файл с классом с расширением *.java.
8.2) Запускаем компилятор javac, где указываем что компилируем и куда сложить выход.
8.3) На выходе получаем файл с таким же названием как на входе, но с расширением *.class - это и есть байт код.

9. Что такое "оператор условия"?

Конструкция, которая выполняет тот или иной блок в зависимости от условий.
Это операторы (ключевые слова языка), которые создают ветвление алгоритма программ.

10. Какие типы операторов условия существуют?
10-1) if-else
if (Условие){
}else{
}

10-2) switch-case
switch(Переменная):
{
	case Значение 1:
		break;
	case Значение 2:
		break;
	default:
		break;
}

10-3) Тернарный оператор условия

(Условие) ? Истино : Ложно;

11. Расскажите про булевы операции || &&?  Расскажите элементы таблицы истинности?
|| - логическое ИЛИ, результат будет True хотя бы один операнд True.
&& - логическое И, результат будет False хотя бы один операнд False.

12. Что такое тернарное условие?

Упрощенная форма конструкции if-else, которая пишется в 1 строку:
(Условие) ? Выражение, если условие Истино : Выражение, если условие Ложно;

13. Что такое циклы и для чего они используются?

Циклы используют для многократного однотипного повторения дейтсвий.

14. Для чего используется цикл for?

for - цикл типа "n-раз"

for(int i = 0; i < n; i++) { (операторы)}

Цикл используется многократного повторения чего-либо, если мы знаем кол-во требуемых повторения.

15. Для чего используется цикл foreach?

for(String str: argv){}

Цикл используется при обходе различных массивов, предполагаю коллекций и других объектов, 
поддерживающих итератор. При этом цикл выполняется кол-во раз равное кол-ву элементов.

16. Для чего используется цикл while?

Цикл выполняется пока условие Истино.

Нужен для многократного повторения, когда мы не значем требуемого кол-ва итераций, 
а дожидаемся наступления определенных условий.

17. Для чего используется цикл do while?

do{ (операторы)}
while(Условие)

Этот цикл выполняется так же, если мы не знаем требуемое кол-во итераций.
Но этот цикл с пост условием, т.е. тело цикло выполнится хотя бы один раз.

18. Что такое массив?

Массив - структура данных для хранения однотипных данных.

19. Как создать массив?

Создаем переменную ссылочного типа на массив и ссылаем её на созданный объект массива 10 элементов.

int[] array = new int[10];

Так же можно не указывать кол-в элементов, а объявлять их сразу.

int[] array = new int[]{1, 2, 3};

20. Как присвоить значение ячейке массива?

Обратиться к массиву по индексу и присвоить значение. Индексирование массива начинается с нуля.

array[0] = 10;
array[0] = 20;

21. Как можно пройти по всем элементам массива?

С помощью циклов for, например:

for(int i = 0; i < array.length; i++){
	System.out.println(array[i]);
}

Тут мы инкрементируем переменную, которая является индексом массива, до значения размера этого массива.

Второй вариант через foreach:

for(int item: array){
	System.out.println(item);
}

Где item отдельный элемент цикла в каждой итерации.

22. Как можно найти элемент в массиве?

С помощью цикла и условного оператора

for(int item: array){
	if(item == 0)
	{
		System.out.println("Найденный элемент");
		break;
	}
}

23. Что будет, если записывать элемент по индексу -1?

На этапе выполнения программы выскочит исключение и программа аварийно завершится

24. Как удалить ячейку в массиве?

Ячейку удалить нельзя, но можно её обнулить значение или ссылку на объект, которую она содержала.

25. Как отредактировать ячейку в массиве?

Обратиться к массиву по индексу и присвоить значение. Индексировани массива начинается с нуля.

array[0] = 10;
array[0] = 20;


--------------------------------------------------------------------
Дополнительные вопросы:
26. Что такое классы обертки?

Классы помещяющие примитивные типы в объект. Т.е. представление примитивного типа, как объект.
Они предоставляют широкий диапазон методов для работы с переменной.

27. Что такое автобоксинг и анбоксинг?

Автобоксинг - помещение примитивного типа в класс обертку.

Integer integer = 5;

Анбоксинг - присваивание значения класса обертки примитивному типу.

int i = new Integer (5);

28. Как в Java передаются параметры в методы?

Параметры передаются по значению. Т.е. в методе создается локальная переменная аргумента и 
ей присваивается значение передаваемого параметра.

29. Почему нельзя изменить ссылку на объект в методе?

Потому, что параметры передаются по значению, в нутри метода мы изменим локальную ссылку на объект,
но это не как не повлияет на ссылку которую мы передавали в метод.

30. Почему нельзя сравнивать ссылочные типы по оператору ==?

Потому, что буду сравниваться адреса в памяти на которые указывают ссылки, а не сами объекты.
И они буду отличаться.

31. Почему примитивные типы можно сравнивать через оператор ==?

Потому, что они эти типы содержат значения, и оператором == буду сравниваться значения этих переменных.

32. Какие объекты могут быть использованы в операторе switch?

Можно использовать простые типы byte, short, char, int. Также можно использовать строки(String),
а также специальные классы, которые являются обёрткой для примитивных типов: Character, Byte, Short, Integer.