Контрольные вопросы часть 2. ООП.

1. Что такое ООП?

2. Базовые концепции ООП?
2.1 Инкапсуляция - механизм, который связывает код и данные которыми он манипулирует, сохраняя их в безопасности,
    как от внешнего так и от ошибочного внутреннего использования.
2.2 Наследование - процесс, когда один объект получает св-ва другого.
2.3 Полиморфизм - принцип ООП, который позволяет использовать один и тот же объект для общего класса действий (много форм).

3. Укажите из каких элементов состоит класс.
Класс состоит из следующих элементов:
Поля - параметры, которыми манипулирует класс.
Конструктор - то, что создает объекты данного класса.
Методы - действия, которые производит класс.

4. Что такое конструктор? Типы конструкторов?

5. Можно ли наследовать конструктор?

6. Что такое перегрузка конструктора?

7. Что такое статический метод?

8. Что такое не статический метод?

9. Для чего используется ключевое слово this?
   Ключевое слово this используется в двух случаях:
9.1 Когда одинаковые имена у поля класса и переменной метода/конструктора;
9.2 Когда нужно вызвать конструктор одного типа (например, конструктор по умолчанию или параметризированный) из другого.
Это еще называется явным вызовом конструктора.
9.3 Пример кода для 9.1, 9.2:
class Human{
    int age;
    int weight;
    int height;

    Human(int age, int weight){
        this.age = age;       //9.1
        this.weight = weight; //9.1
    }

    Human(int age, int weight, int height){
        //вы вызываете конструктор с двумя параметрами
        this(age, weight); //9.2
        //и добавляете недостающую переменную
        this.height = height;
    }
}

10. Какой класс является базовый родительным классов для всех классов?
Все классы исходят от суперкласса Object

11. Что такое наследование? Приведите примеры из реальной жизни.

12. Опишите процесс создания нового объекта.
12.1 Создание объектов в java проходит через 2 этапа:
     1 этап: Объявляем переменную с типом класса Box
     Box myBox; //объявляем ссылку на объект
     2 Этап: Получение конкретной, физической копии объекта
     myBox = new Box(); //выделяет память под объект Box и возвращает ссылку на адрес памяти
12.2 Оператор new резервирует память под объект и возвращает ссылку на него.
     Эта ссылка представляет собой адрес объекта в памяти, зарезервированной оператором new.
     Затем эта ссылка сохраняется в переменной.
     В результате переменная myBox содержит адрес памяти конкретного объекта типа Box.

13. Как вызвать метод из родительского класса?

14. Что такое переопределение метода?
14.1 Переопределение это - когда подкласс обеспечивает свою реализацию метода, чем в суперклассе.
14.2 Пример кода:
public class Bear extends Animal {
    public void voice() { р-р-р-р;}
}

public class Cat extends Animal {
    public void voice() { мяу!;}
}

15. Можно ли переопределить статический метод?

16. Что такое виртуальная функция и используются ли они в Java?

17. Что такое перегрузка метода?
17.1 Перегрузка - когда внутри одного класса определяются 2 или более методов с одним и тем же именем,
но они различаются по типу и/или кол-ву параметров.
17.2 Пример кода 1:
void Test();
void Test(int a);
void Test(double b, int c);
17.3 Пример кода 2:
Если бы в Java отсутствовала перегрузка методов (как в Си), то необходимо было бы писать свои функции под каждый тип переменных: abs, labs, fabs.

18. Можно ли изменить тип возвращаемых тип данных при перегрузке метода?

19. Что такое множественное наследование? Как его можно реализовать в Java.

20. Что такое полиморфизм? Приведите примеры из реальной жизни.

21. Что такое инкапсуляция?

22. Как реализована инкапсуляция в Java?

23. Что такое абстракция?

24. Как реализована абстракция в Java?

25. Что такое интерфейс?

26. Что такое внутренний класс? Типы внутренних классов.

27. Что такое анонимный класс.

28. Для чего используется конструктор в абстрактном классе?

29.Можно ли создать анонимный класс. если в классе нет конструктора по умолчанию?

30.Что такое композиция?

31.Что такое агрегация?

32.Какие типы исключительных ситуаций бывают?

33. Как обрабатываются исключительные ситуации?

34. Назовите основные методы класса Object?