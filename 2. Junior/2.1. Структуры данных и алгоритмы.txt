1. Что такое generic?
оператор «<>» — это diamond operator. Его так назвали из-за внешнего сходства с бриллиантом.
Рекомендаций от Oracle о том, когда какие обозначения лучше использовать в дженериках:
E — element, для элементов параметризованных коллекций;
K — key, для ключей map-структур;
V — value, для значений map-структур;
N — number, для чисел;
T — type, для обозначения типа параметра в произвольных классах;
S, U, V и так далее — применяются, когда в дженерик-классе несколько параметров.

2. Что такое wild cards?
Java есть и специальный символ для обозначения неизвестного типа — «?». Его принято называть wildcard, дословно — «дикая карта».
Термин wildcard пришёл в программирование из карточной игры. В покере, например, так называют карту, которая может сыграть вместо любой другой. Джокер — известный пример такой «дикой карты».

3. Что такое bound wild cards?
Wildcards можно применять для ограничений типов:

List<? extends Garbage> example2 = new ArrayList<Paper>();
Это уже знакомое нам ограничение сверху, upper bounding, — вместо «?» допустим Garbage или любой его класс-наследник, то есть Paper подходит.

Но можно ограничить тип и снизу. Это называется lower bounding и выглядит так:

List<? super Garbage> example3 = new ArrayList<Garbage>();
Здесь <? super Garbage> означает, что вместо «?» можно подставить Garbage или любой класс-предок Garbage. Все ссылочные классы неявно наследуют класс Object, так что в правой части ещё может быть ArrayList<Object>.


4. Что такое unbounded wild cards?

5. Где хранится информация про Generics?
В исходном коде до момента компиляции

6. Как можно получить тип Generics?
.getGenericSuperclass()

7. Что такое итератор?
Это шаблон проектирования для прохода по всем элементам множества Основные методы:

hasNext() - существует ли следующий элемент
next() - возвращает сам элемет В стандартной библиотеке java существует 2 интерфейса это Iterable и Iterator.
Iterable - вынуждает релизовать метод возвращающий итератор.
Iterator - вернуть объект итератора.

8. Что такое коллекции?

9. Назовите базовые интерфейсы коллекций?

10. Расскажите реализации интерфейса List?

11. Расскажите реализации интерфейса Set?

12. Расскажите реализации интерфейса Map?

13. Отличие ArrayList от LinkedList?

14. Отличие Set от List?

15. Расскажите про методы Object hashCode и equals?

16. Расскажите про реализации Map?

17. Расскажите, что такое коллизии в Map? Как с ними бороться?

18. Расскажите, что такое анализ алгоритма?

19. Какая временная сложность алгоритмов(O-нотация) добавления, замены и удаления в каждой из коллекций? . С чем связаны отличия?

20. Расскажите реализации данных очередей и стеков.

21. Расскажите про реализации деревьев.

22. Что такое loadFactor?