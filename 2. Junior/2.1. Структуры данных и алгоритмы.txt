1. Что такое generic?
оператор «<>» — это diamond operator. Его так назвали из-за внешнего сходства с бриллиантом.
Рекомендаций от Oracle о том, когда какие обозначения лучше использовать в дженериках:
E — element, для элементов параметризованных коллекций;
K — key, для ключей map-структур;
V — value, для значений map-структур;
N — number, для чисел;
T — type, для обозначения типа параметра в произвольных классах;
S, U, V и так далее — применяются, когда в дженерик-классе несколько параметров.

2. Что такое wild cards?
Java есть и специальный символ для обозначения неизвестного типа — «?». Его принято называть wildcard, дословно — «дикая карта».
Термин wildcard пришёл в программирование из карточной игры. В покере, например, так называют карту, которая может сыграть вместо любой другой. Джокер — известный пример такой «дикой карты».

3. Что такое bound wild cards?
Wildcards можно применять для ограничений типов:

List<? extends Garbage> example2 = new ArrayList<Paper>();
Это уже знакомое нам ограничение сверху, upper bounding, — вместо «?» допустим Garbage или любой его класс-наследник, то есть Paper подходит.

Но можно ограничить тип и снизу. Это называется lower bounding и выглядит так:

List<? super Garbage> example3 = new ArrayList<Garbage>();
Здесь <? super Garbage> означает, что вместо «?» можно подставить Garbage или любой класс-предок Garbage. Все ссылочные классы неявно наследуют класс Object, так что в правой части ещё может быть ArrayList<Object>.


4. Что такое unbounded wild cards?

5. Где хранится информация про Generics?
В исходном коде до момента компиляции

6. Как можно получить тип Generics?
.getGenericSuperclass()

7. Что такое итератор?
Это шаблон проектирования для прохода по всем элементам множества Основные методы:

hasNext() - существует ли следующий элемент
next() - возвращает сам элемет В стандартной библиотеке java существует 2 интерфейса это Iterable и Iterator.
Iterable - вынуждает релизовать метод возвращающий итератор.
Iterator - вернуть объект итератора.

8. Что такое коллекции?

9. Назовите базовые интерфейсы коллекций?
List, Set, Queue

10. Расскажите реализации интерфейса List?
ArrayList - на массиве с несинхронизированными методами.
Vector - на массиве с синхронизированными методами.
Stack - на массиве есть синхронизированные методы но не все.
LinkedList - двусвязный список.

11. Расскажите реализации интерфейса Set?
HashSet - основан на HashMap.
LinkedHashSet - расширяет HashSet, позволяет получать элементы в порядке их добавления, но требует больше памяти.
TreeSet - основан на сбалансированном двоичном дереве, в результате элементы упорядочены по возрастанию hashCode()'ов. Можно управлять порядком при помощи компаратора.

12. Расскажите реализации интерфейса Map?

13. Отличие ArrayList от LinkedList?
13.1 Отличие коллекций ArrayList и LinkedList. Отличие двух коллекций ArrayList и LinkedList связано со способом хранения данных.
Реализация. ArrayList хранит элементы в виде массива, а LinkedList - в виде списка (двунаправленного).
Кроме этого, в ArrayList быстрее выполняется сортировка, поскольку для ее выполнения данные списка копируются в массив...
13.2 ArrayList - это список на основе массива. LinkedList - связанный список на основе элементов и связи между ними. В качестве LinkedList лучше всего подходит представление вагонов поезда сцепленных последовательно.
     ArrayList следует использовать, когда в приоритете доступ по индексу, так как эти операции выполняются за константное время. Добавление в конец списка в среднем тоже выполняется за константное время. Кроме того в ArrayList нет дополнительных расходов на хранение связки между элементами. Минусы в скорости вставки/удаления элементов находящихся не в конце списка, так как при этой операции все элементы правее добавляемого/удаляемого сдвигаются.
     LinkedList удобен когда важнее быстродействие операций вставки/удаления, которые в LinkedList выполняются за константное время. Операции доступа по индексу производятся перебором с начала или конца (смотря что ближе) до нужного элемента. Дополнительные затраты на хранение связки между элементами.
     Одним словом - если часто вставляете/удаляете - выбирайте в пользу LinkedList, в противном случае ArrayList

14. Отличие Set от List?
Список

Упорядоченная группа элементов.
Список используется для сбора элементов с дубликатами.
Новые методы определены внутри интерфейса List.

Набор
Неупорядоченная группа элементов.
Набор используется для сбора элементов без дубликатов.
Внутри интерфейса Set не определены новые методы, поэтому мы должны использовать методы интерфейса Collection только с подклассами Set.

15. Расскажите про методы Object hashCode и equals?

16. Расскажите про реализации Map?

17. Расскажите, что такое коллизии в Map? Как с ними бороться?

18. Расскажите, что такое анализ алгоритма?

19. Какая временная сложность алгоритмов(O-нотация) добавления, замены и удаления в каждой из коллекций? . С чем связаны отличия?

20. Расскажите реализации данных очередей и стеков.

21. Расскажите про реализации деревьев.

22. Что такое loadFactor?
loadFactor - это коэффициент загрузки, равен соотношению (размер коллекции / колличество элементов). При достижении порогового значения размер коллекции увеличивается.
Например, в хеш-таблице поле, которое показывает на сколько заполнен массив, на котором эта таблица основана. Если на 3/4, то создается новый массив с большим размером и данные перераспределяются.